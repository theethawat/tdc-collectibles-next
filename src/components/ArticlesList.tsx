"use client";

import { useState } from "react";
import { Article, ArticleResponse } from "@/model";
import { ThumbnailList } from "@/components";

interface ArticlesListProps {
  initialArticles: Article[];
  initialTotal: number;
}

// Generated by AI
// Display the client component without useEffect
// recieve the initial data from the server component (SEO friendly)
// and use the client component to load more data (non-SEO friendly)
export default function ArticlesList({
  initialArticles,
  initialTotal,
}: ArticlesListProps) {
  const [articles, setArticles] = useState<Article[]>(initialArticles);
  const [size, setSize] = useState(12);
  const [isLoading, setIsLoading] = useState(false);

  const loadMoreArticles = async () => {
    try {
      setIsLoading(true);
      const newSize = size + 4;
      const res = await fetch(
        `${process.env.NEXT_PUBLIC_API_URL}/article?page=1&size=${newSize}`,
        {
          next: { revalidate: 60 },
        }
      );
      if (!res.ok) {
        throw new Error("Failed to fetch data");
      }
      const data: ArticleResponse = await res.json();
      setArticles(data.rows);
      setSize(newSize);
    } catch (error) {
      console.error("Error fetching more articles:", error);
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className='w-full'>
      <ThumbnailList articles={articles} />
      {size < initialTotal && (
        <div className='flex justify-center my-4'>
          <button
            className='btn btn-wide btn-sm'
            onClick={loadMoreArticles}
            disabled={isLoading}
          >
            {isLoading ? "กำลังโหลด..." : "โหลดเพิ่ม"}
          </button>
        </div>
      )}
    </div>
  );
}
